<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.huimin.yk.web.dao.customer.CustomerMoneyMapper" >
  <resultMap id="BaseResultMap" type="net.huimin.yk.web.model.customer.CustomerMoney" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="money_type" property="moneyType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    
    <association property="app"   column="customer_id" select="net.huimin.yk.web.dao.customer.CustomerApplicationMapper.selectByPrimaryKey" /> 
    <association property="agent" column="customer_id" select="net.huimin.yk.web.dao.agent.AgentUserMapper.selectByPrimaryKey" /> 
    
  </resultMap>
  <sql id="Base_Column_List" >
    Id, customer_id, finish_time, amount, remark, money_type, create_time, status ,account_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_customer_money
    where Id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByAccountId" resultMap="BaseResultMap" parameterType="net.huimin.yk.web.model.customer.CustomerMoney" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_customer_money
    where  1 = 1
		 <if test="null != accountId" >
    	    AND account_id = #{accountId,jdbcType=INTEGER}
	    </if>
	    <if test="null != status" >
	    	AND status = #{status,jdbcType=INTEGER}
	    </if>
	    <if test="null != moneyType" >
	    	AND money_type = #{moneyType,jdbcType=INTEGER}
	    </if>
	    <if test="null == finishTime" >
	    	AND finish_time is null
	    </if>
	    <if  test="null != customerId"  >
	    	AND customer_id  = #{customerId,jdbcType=INTEGER}
	    </if>
	    <if  test="null != status"  >
	    	AND status  = #{status,jdbcType=INTEGER}
	    </if> 
		order by create_time DESC , money_type ASC      
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_customer_money
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="net.huimin.yk.web.model.customer.CustomerMoney" >
    insert into t_customer_money (Id, customer_id, finish_time, 
      amount, remark, money_type, 
      create_time, status , account_id)
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{amount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{moneyType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="net.huimin.yk.web.model.customer.CustomerMoney" >
    insert into t_customer_money
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="moneyType != null" >
        money_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="moneyType != null" >
        #{moneyType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
       <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.huimin.yk.web.model.customer.CustomerMoney" >
    update t_customer_money
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="moneyType != null" >
        money_type = #{moneyType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.huimin.yk.web.model.customer.CustomerMoney" >
    update t_customer_money
    set customer_id = #{customerId,jdbcType=INTEGER},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      money_type = #{moneyType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>